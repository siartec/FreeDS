diff --git a/.gitignore b/.gitignore
index 2af98ca..f9526b3 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1 +1,2 @@
 /config.json
+.vscode/
\ No newline at end of file
diff --git a/src/AsyncMqttClient.cpp b/src/AsyncMqttClient.cpp
index f62e1ef..9768b89 100644
--- a/src/AsyncMqttClient.cpp
+++ b/src/AsyncMqttClient.cpp
@@ -449,7 +449,11 @@ void AsyncMqttClient::_onPoll(AsyncClient* client) {
 
   // if there is too much time the client has sent a ping request without a response, disconnect client to avoid half open connections
   if (_lastPingRequestTime != 0 && (millis() - _lastPingRequestTime) >= (_keepAlive * 1000 * 2)) {
-    disconnect();
+    disconnect(true);
+    return;
+  }
+  else if(millis() - _lastServerActivity >= (_keepAlive * 1000 * 2)) {
+    disconnect(true);
     return;
   // send ping to ensure the server will receive at least one message inside keepalive window
   } else if (_lastPingRequestTime == 0 && (millis() - _lastClientActivity) >= (_keepAlive * 1000 * 0.7)) {
@@ -660,7 +664,12 @@ bool AsyncMqttClient::_sendDisconnect() {
 
   SEMAPHORE_TAKE(false);
 
-  if (_client.space() < neededSpace) { SEMAPHORE_GIVE(); return false; }
+  if (_client.space() < neededSpace) { 
+    SEMAPHORE_GIVE();
+    _client.close(true);
+    _clear();
+    return false; 
+  }
 
   char fixedHeader[2];
   fixedHeader[0] = AsyncMqttClientInternals::PacketType.DISCONNECT;
@@ -714,6 +723,7 @@ void AsyncMqttClient::disconnect(bool force) {
 
   if (force) {
     _client.close(true);
+    _clear();
   } else {
     _disconnectFlagged = true;
     _sendDisconnect();
